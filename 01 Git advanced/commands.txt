git config --global --list
git config --global -edit
git config --global --get diff.tool

git difftool <hash commit older> <hash commit newer>

git diff --cached
git status -s

git init
git add README.md
git commit -m "First commit"
git remote add origin <url>
git push -u origin master (-u -> --set-upstream)
git remote -v

git log --oneline
git commit --amend

git reflog
git reflog HEAD@{2.days.ago}

git diff HEAD@{5} HEAD@{4}
git difftool HEAD@{5} HEAD@{4}

git diff HEAD@{1.min.ago} HEAD@{2.days.ago}
git difftool HEAD@{1.min.ago} HEAD@{2.days.ago}

git reflog expire --expire-unreachable=now --all -> This prunes all reflog entries that are not reachable from any current
git prune
git gc --prune=now -> This is used for garbage collection in a Git repository

git fetch origin --prune
git config --global fetch.prune true

git reset HEAD
git reset <file name>
git reset <commit hash>

git reset head --hard

git clean -d -x -f -i
git reset <commit hash> --hard

git revert <commit hash>
git revert --abort

git grep <STRING>

git rebase <branch name> (rebases current branch to the 'branch name')
git rebase -i HEAD~2 (squashing 2 commits into one commit)

git cherry-pick <commit hash 1> <commit hash 2> <commit hash 3>

git branch -d <branch-name> (if fully merged)
git branch -D <branch-name> (forces to delete)
