name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./02 GitHub Actions/01"
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./02 GitHub Actions/01"
    # outputs:
    #   script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      # - name: Cache dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.npm
      #     key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Build website
        run: npm run build
      - name: List directory
        run: ls -la
      - name: List dist directory
        run: ls -la dist
      - name: Print working directory
        run: pwd

      # - name: Publish JS filename
      #   id: publish
      #   run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: "./02 GitHub Actions/01/dist"
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "02 GitHub Actions/01"
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents
        run: ls
      # - name: Output filename
      #   run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
